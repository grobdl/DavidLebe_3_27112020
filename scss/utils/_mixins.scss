@mixin afterLayer(){
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

@mixin block-padding(){
	padding: 1em;
}

@mixin block-shadow($color){
	box-shadow: 0px 8px 15px $color;
}

@mixin ellipsis($value){
	@if $value == 'do'{
		white-space: pre;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	@else{
		white-space: normal;
		overflow: hidden;
		text-overflow: ellipsis;
	}
}

@mixin flex($direction){
	display: flex;
	flex-flow: $direction wrap;
}

@mixin hidden{
    &_hidden{
        display: none;
    }
}

@mixin media-width ($map){
	@each $key, $value in $map{
		$min: map-get($value, min);
		$max: map-get($value, max);
		@if $min == 'none' {
			@media screen and (max-width: $max){
				@content ($key);
			}		
		}
		@if $max == 'none' {
			@media screen and (min-width: $min){
				@content ($key);
			}		
		}
		@else{
			@media screen and (min-width: $min) and (max-width: $max){
				@content ($key);
			}
		}
	}
}

@mixin media-width__bloc($media-map, $breakpoint-map, $bloc){
	$width__map: map-get($media-map, $breakpoint-map);
	width: map-get($width__map, $bloc);
}

@mixin media-transition__btn{
	&::after{
		opacity:1;
	}
}

@mixin media-transition__plat{
	& > .plat__h3{
		width: 60%;
	}
	& > .plat__p{
		width: 60%;
	}
	& > .plat-container .plat-container__icon{
		transform: rotate(360deg);
	}
}

@mixin stackHeart(){
	&__stackHeart{
		width: 10%;
		cursor: pointer;
		&-menu{
			position: absolute;
			bottom: 20px;
			right : 20px;
		}
	}
}

@mixin textLeft{
	&_textLeft{
		text-align: left;
	}
}

